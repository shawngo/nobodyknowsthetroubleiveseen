<?php
/**
 * @file
 * Makes changes to standard Ubercart outputs
 */

/**
 * Implementation of hook_nodeapi()
 */
function uc_mods_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch($op) {
	  case 'view':
		  if($node->content['add_to_cart']) {
				// push Add To Cart button further down
				$node->content['add_to_cart']['#weight'] = 50;
			}
		break;
  }
}

/**
 * Implementation of hook_theme()
 */
function uc_mods_checkout_pane($op) {//$existing, $type, $theme, $path) {
  $panes[] = array(
    'id' => 'cart',
    'callback' => 'uc_mods_uc_checkout_pane_cart',
    'title' => t('Cart contents'),
    'desc' => t("Display the contents of a customer's shopping cart."),
    'weight' => 1,
    'process' => FALSE,
    'collapsible' => FALSE,
  );
  return $panes;
}

function uc_mods_form_alter(&$form, $form_state, $form_id) {
  //uc_cart_view_form
  switch($form_id) {
    case 'uc_cart_view_form':
      $form['items'][1]['total']['#value'] = '<strong>Inquiry Only</strong>';
      $form['checkout']['#value'] = 'Checkout';
      $form['items']['#columns']['total']['cell'] = '';
//       $form['items']['#columns']['qty']['cell'] = '';
      // found this bit of info here http://www.ubercart.org/forum/development/10722/how_customize_cart_drupal_6ubercart_2

      //There are 6 fields in this array other than the cart items, so I loop through and don't account for those 6... haha elegant!
      for($i=0;$i<count($form['items'])-5;$i++){
//      for($i=0; $i<count($form['items'])-1;$i++){
        $form['items'][$i]['total'] = '';
//        $form['items'][$i]['qty']['#type'] = 'hidden';
      }
      break;
  }

}


function uc_mods_uc_checkout_pane_cart($op) {
//echo '<h1>'.$op.'</h1>';
  switch ($op) {
    case 'view':
      $contents['cart_review_table'] = array(
        '#value' => theme('uc_mods_cart_review_table'),
        '#weight' => variable_get('uc_pane_cart_field_cart_weight', 2),
      );
      return array('contents' => $contents, 'next-button' => FALSE);
 
    case 'review':
      $items = uc_cart_get_contents();
      $output = '<table>';
      $context = array(
        'revision' => 'themed',
        'type' => 'cart_item',
        'subject' => array(),
      );
      foreach ($items as $item) {
        $desc = check_plain($item->title) . uc_product_get_description($item);


        $price_info = array(
          'price' => '99',//$item->price,
          'qty' => $item->qty,
        );

        $context['subject'] = array(
          'cart' => $items,
          'cart_item' => $item,
          'node' => node_load($item->nid),
        );
        $output .= '<tr valign="top"><td>'. $item->qty .'&times;</td><td width="100%">'. $desc
                  .'</td><td nowrap="nowrap">pricexxx?&nbsp;</td></tr>';

		// removed '. uc_price($price_info, $context) .'

      }
      $output .= '</table>';
      $review[] = $output;
      return $review;

  }
}

function uc_mods_theme($existing, $type, $theme, $path) {
  return array(
    'uc_mods_cart_review_table' => array(
      'arguments' => array('show_subtotal' => NULL),
    ),
  );
}


function theme_uc_mods_cart_review_table($show_subtotal = TRUE) {
  $subtotal = 0;

  // Set up table header.
  $header = array(
    array('data' => t('Qty'), 'class' => 'qty'),
    array('data' => t('Products'), 'class' => 'products'),
    array('data' => t('Price'), 'class' => 'price'),
  );

  $context = array();

  // Set up table rows.
  $contents = uc_cart_get_contents();
  foreach ($contents as $item) {
    $price_info = array(
      'price' => $item->price,
      'qty' => $item->qty,
    );

    $context['revision'] = 'altered';
    $context['type'] = 'cart_item';
    $context['subject'] = array(
      'cart' => $contents,
      'cart_item' => $item,
      'node' => node_load($item->nid),
    );

    $total = uc_price($price_info, $context);
    $subtotal += $total;

    $description = check_plain($item->title) . uc_product_get_description($item);

    // Remove node from context to prevent the price from being altered.
    $context['revision'] = 'themed-original';
    $context['type'] = 'amount';
    unset($context['subject']);
    $rows[] = array(
      array('data' => t('@qty&times;', array('@qty' => $item->qty)), 'class' => 'qty'),
      array('data' => $description, 'class' => 'products'),
      array('data' => uc_price($total, $context), 'class' => 'price'),
    );
  }

  // Add the subtotal as the final row.
  if ($show_subtotal) {
    $context = array(
      'revision' => 'themed-original',
      'type' => 'amount',
    );
    $rows[] = array(
      'data' => array(array('data' => '<span id="subtotal-title">' . t('Subtotal:') . '</span> ' . uc_price($subtotal, $context), 'colspan' => 4, 'class' => 'subtotal')),
      'data' => array(array('data' => '<span id="subtotal-title">' . t('Inquiry Only') . '</span>', 'colspan' => 4, 'class' => 'subtotal')),
      'class' => 'subtotal',
    );
  }

  return theme('table', $header, $rows, array('class' => 'cart-review'));
}

