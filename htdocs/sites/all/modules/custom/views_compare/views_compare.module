<?php
// $Id$
/**
 * Implementation of hook_views_api().
 *
 * This tells drupal that there is Views integration file named 
 * module-name.views.inc 
 */
function views_compare_views_api() {
  // include 'path' in this array so that your views.inc file can be stored in a different location.
  return array(
    'api' => 2.0,
//    'path' => drupal_get_path('module', 'views_compare') .'/views',
  );
}

/**
 * Implementation of hook_forms().
 *
 * Register an "add to cart" form for each product to prevent id collisions.
 */
function views_compare_forms($form_id, $args) {
  $forms = array();
  if (is_object($args[0]) && isset($args[0]->type)) {
    $product = $args[0];
    if (in_array($product->type, array_keys(uc_product_node_info()))) {
      $forms['views_compare_form_'. $product->nid] = array('callback' => 'views_compare_form');
    }
  }
  return $forms;
}

function views_compare_form($form_state, $nid) {
  $form = array();
  $nid = intval($nid);
  $form['#id'] = 'compare-compare-'. $nid;
  $form['#attributes'] = array('id' => 'compare-id-'. $nid);
  $form['compare'] = array(
    '#id' => 'compare-checkbox'. $nid,
    '#type' => 'checkbox',
    '#title' => t('Compare Product'),
    '#attributes' => array(
      'class' => 'list-views-compare-checkbox',
    ),
  );
  
  // Redirect back to page which initiated the create request;
  // usually admin/user/user/create.
  $form['nid'] = array('#type' => 'hidden', '#value' => $nid, '#id' => 'compare-nid-'. $nid);

  $Xform['submit'] = array(
    '#type' => 'submit',
    '#value' =>  'Compare', //variable_get('uc_teaser_add_to_cart_text', t('Add to cart')),
    '#id' => 'edit-submit-'. $nid,
    '#attributes' => array(
      'class' => 'list-views-compare',
    ),
  );

 // uc_form_alter($form, $form_state, __FUNCTION__);

  return $form;
}



function views_compare_views_pre_render(&$view) {
  // example code here
  //dsm(get_defined_vars());
  if($view->name == 'taxonomy_term') {
    if(sizeof($view->result) < 2) {
      unset($view->field['compare']);
    }
    /*
    $bc = drupal_get_breadcrumb();
    drupal_set_message($bc[1]);
    $bc[1] = l('Collections', 'collections');

    drupal_set_breadcrumb($bc);
    */
  }
  else if($view->name == 'compare_products') {
    $bc = drupal_get_breadcrumb();
    if($_SERVER['HTTP_REFERER']) {
      $bc[1] = l('Collections', $_SERVER['HTTP_REFERER']);
    }
    else {
      $bc[1] = '<a href="javascript:history.back(1)">Collections</a>';
    }
    drupal_set_breadcrumb($bc = array());
  }
}

function xxxxuc_catalog_buy_it_now_form($form_state, $node) {
  $form = array();
  $form['#validate'][] = 'uc_catalog_buy_it_now_form_validate';
  $form['#submit'][] = 'uc_catalog_buy_it_now_form_submit';
  $form['nid'] = array('#type' => 'hidden', '#value' => $node->nid);
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' =>  variable_get('uc_teaser_add_to_cart_text', t('Add to cart')),
    '#id' => 'edit-submit-'. $node->nid,
    '#attributes' => array(
      'class' => 'list-add-to-cart',
    ),
  );

  uc_form_alter($form, $form_state, __FUNCTION__);

  return $form;
}
